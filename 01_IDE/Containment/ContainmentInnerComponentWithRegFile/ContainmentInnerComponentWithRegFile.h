#pragma once
//#include<Windows.h>
class IMultiplication :public IUnknown
{
public:
	//Imultiplication specification method decleration
	virtual HRESULT __stdcall MultiplicationOfTwoIntegers(int, int, int*) = 0;//pure virtual 

};
class IDivision :public IUnknown
{
public:
	//diviosn sepecificatio method decelration
	virtual HRESULT __stdcall DivisionOfTwoIntegers(int, int, int*) = 0;
};
//CLSID of MultiplicationDivision component
// {AE50884A-3324-4453-B58B-D9F1E05468E9}
//{ 0xae50884a, 0x3324, 0x4453, { 0xb5, 0x8b, 0xd9, 0xf1, 0xe0, 0x54, 0x68, 0xe9 } };

const CLSID CLSID_MultiplicationDivision = { 0xae50884a, 0x3324, 0x4453, { 0xb5, 0x8b, 0xd9, 0xf1, 0xe0, 0x54, 0x68, 0xe9 } };

//iid for Imultiplicaion interface // {4E99AAB3-870D-4471-95D0-83B1EB4052C4} { 0x4e99aab3, 0x870d, 0x4471, { 0x95, 0xd0, 0x83, 0xb1, 0xeb, 0x40, 0x52, 0xc4 } };

const IID IID_IMultiplication = { 0x4e99aab3, 0x870d, 0x4471, { 0x95, 0xd0, 0x83, 0xb1, 0xeb, 0x40, 0x52, 0xc4 } };

//iid for IDivision interface
/*// {578AE508-6312-473F-92D0-DB1F147377B9}
static const GUID <<name>> =
{ 0x578ae508, 0x6312, 0x473f, { 0x92, 0xd0, 0xdb, 0x1f, 0x14, 0x73, 0x77, 0xb9 } };
*/
const IID IID_IDivision = { 0x578ae508, 0x6312, 0x473f, { 0x92, 0xd0, 0xdb, 0x1f, 0x14, 0x73, 0x77, 0xb9 } };
